trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - external/azure.pipelines.external-vs2022.yml
pr:
  branches:
    include:
    - master
  paths:
    include:
    - external/azure.pipelines.external-vs2022.yml

resources:
  pipelines:
  - pipeline: ms-iot.ruby-vs2022
    source: ms-iot.ruby-vs2022
    version: '20221005.2'
  - pipeline: ms-iot.python-vs2022
    source: ms-iot.python-vs2022
    version: '20230206.1'
  - pipeline: ms-iot.vcpkg-vs2022-core
    source: ms-iot.vcpkg-vs2022-core
    version: '20230206.2'
  - pipeline: ms-iot.vcpkg-vs2022-boost
    source: ms-iot.vcpkg-vs2022-boost
    version: '20221006.2'
  - pipeline: ms-iot.vcpkg-vs2022-qt
    source: ms-iot.vcpkg-vs2022-qt
    version: '20221006.2'
  - pipeline: ms-iot.vcpkg-vs2022-graphics
    source: ms-iot.vcpkg-vs2022-graphics
    version: '20221013.2'
  - pipeline: ms-iot.vcpkg-vs2022-nav
    source: ms-iot.vcpkg-vs2022-nav
    version: '20221013.1'
  - pipeline: ms-iot.vcpkg-vs2022-gz
    source: ms-iot.vcpkg-vs2022-gz
    version: '20221006.2'
  - pipeline: ms-iot.vcpkg-vs2022-flaky
    source: ms-iot.vcpkg-vs2022-flaky
    version: '20221010.3'

jobs:
- job: Build
  pool: Edge-Robotics-VS2022-ESBuild
  timeoutInMinutes: 360
  strategy:
    matrix:
      humble:
        INSTALL_DIR: 'c:\opt\ros\humble\x64'
        DISTRO_NAME: 'humble'
        VCPKG_DEFAULT_TRIPLET: 'x64-windows'
      rolling:
        INSTALL_DIR: 'c:\opt\ros\rolling\x64'
        DISTRO_NAME: 'rolling'
        VCPKG_DEFAULT_TRIPLET: 'x64-windows'
  workspace:
    clean: all
  steps:
  - download: ms-iot.vcpkg-vs2022-core
  - download: ms-iot.vcpkg-vs2022-boost
  - download: ms-iot.vcpkg-vs2022-qt
  - download: ms-iot.vcpkg-vs2022-graphics
  - download: ms-iot.vcpkg-vs2022-nav
  - download: ms-iot.vcpkg-vs2022-gz
  - download: ms-iot.vcpkg-vs2022-flaky
  - download: ms-iot.python-vs2022
  - download: ms-iot.ruby-vs2022
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(PIPELINE.WORKSPACE)\ms-iot.vcpkg-vs2022-core\$(VCPKG_DEFAULT_TRIPLET)-installed\installed.zip'
      destinationFolder: 'c:\installed'
      cleanDestinationFolder: false
      overwriteExistingFiles: true
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(PIPELINE.WORKSPACE)\ms-iot.vcpkg-vs2022-boost\$(VCPKG_DEFAULT_TRIPLET)-installed\installed.zip'
      destinationFolder: 'c:\installed'
      cleanDestinationFolder: false
      overwriteExistingFiles: true
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(PIPELINE.WORKSPACE)\ms-iot.vcpkg-vs2022-qt\$(VCPKG_DEFAULT_TRIPLET)-installed\installed.zip'
      destinationFolder: 'c:\installed'
      cleanDestinationFolder: false
      overwriteExistingFiles: true
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(PIPELINE.WORKSPACE)\ms-iot.vcpkg-vs2022-graphics\$(VCPKG_DEFAULT_TRIPLET)-installed\installed.zip'
      destinationFolder: 'c:\installed'
      cleanDestinationFolder: false
      overwriteExistingFiles: true
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(PIPELINE.WORKSPACE)\ms-iot.vcpkg-vs2022-nav\$(VCPKG_DEFAULT_TRIPLET)-installed\installed.zip'
      destinationFolder: 'c:\installed'
      cleanDestinationFolder: false
      overwriteExistingFiles: true
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(PIPELINE.WORKSPACE)\ms-iot.vcpkg-vs2022-gz\$(VCPKG_DEFAULT_TRIPLET)-installed\installed.zip'
      destinationFolder: 'c:\installed'
      cleanDestinationFolder: false
      overwriteExistingFiles: true
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(PIPELINE.WORKSPACE)\ms-iot.vcpkg-vs2022-flaky\$(VCPKG_DEFAULT_TRIPLET)-installed\installed.zip'
      destinationFolder: 'c:\installed'
      cleanDestinationFolder: false
      overwriteExistingFiles: true
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(PIPELINE.WORKSPACE)\ms-iot.python-vs2022\$(DISTRO_NAME)-python\python.zip'
      destinationFolder: '$(INSTALL_DIR)'
      cleanDestinationFolder: false
      overwriteExistingFiles: true
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(PIPELINE.WORKSPACE)\ms-iot.ruby-vs2022\$(DISTRO_NAME)-ruby\ruby.zip'
      destinationFolder: '$(INSTALL_DIR)'
      cleanDestinationFolder: false
      overwriteExistingFiles: true
  - powershell: |
      & .\external\copyVcpkgInstalled.ps1 -InstallDir $Env:INSTALL_DIR -VcpkgInstalled "c:\installed\$Env:VCPKG_DEFAULT_TRIPLET"
  - script: |
      DEL /F /Q %INSTALL_DIR%\share\tinyxml\tinyxml-config.cmake
      DEL /F /Q %INSTALL_DIR%\share\tinyxml\tinyxmlTargets-release.cmake
      DEL /F /Q %INSTALL_DIR%\share\tinyxml\tinyxmlTargets.cmake
      DEL /F /Q %INSTALL_DIR%\include\sdformat-6.2\tinyxml.h
      xcopy /Y /S /I external\post-patch %INSTALL_DIR%
      copy /Y %INSTALL_DIR%\lib\manual-link\gtest_main.lib %INSTALL_DIR%\lib
      copy /Y %INSTALL_DIR%\lib\manual-link\gmock_main.lib %INSTALL_DIR%\lib
      copy /Y %INSTALL_DIR%\tools\protobuf\protoc.exe %INSTALL_DIR%\bin
    displayName: 'Post-patch the external dependencies'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(INSTALL_DIR)'
      includeRootFolder: false
      archiveType: 'zip' # Options: zip, 7z, tar, wim
      tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: '$(Build.ArtifactStagingDirectory)/external.zip'
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/external.zip'
      artifactName: $(DISTRO_NAME)-external
