trigger: none
pr: none

jobs:
- job: Build
  pool: 'Edge-Robotics-VS2019'
  #  vmImage: 'windows-2019'
  strategy:
    matrix:
      noetic:
        INSTALL_DIR: 'c:\opt\ros\noetic\x64'
        DISTRO_NAME: 'noetic'
        PDB_OUTPUT_DIRECTORY: 'd:\symbols'
        ROS_VERSION: '1'
      dashing:
        INSTALL_DIR: 'c:\opt\ros\foxy\x64'
        DISTRO_NAME: 'dashing'
        PDB_OUTPUT_DIRECTORY: 'd:\symbols'
        ROS_VERSION: '2'
      eloquent:
        INSTALL_DIR: 'c:\opt\ros\foxy\x64'
        DISTRO_NAME: 'foxy'
        PDB_OUTPUT_DIRECTORY: 'd:\symbols'
        ROS_VERSION: '2'
      foxy:
        INSTALL_DIR: 'c:\opt\ros\foxy\x64'
        DISTRO_NAME: 'foxy'
        PDB_OUTPUT_DIRECTORY: 'd:\symbols'
        ROS_VERSION: '2'
  timeoutInMinutes: 360
  workspace:
    clean: all
  steps:
  - script: 'reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f'
    displayName: 'Enable long paths on Windows'
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific' # Options: current, specific
      project: 'ros-win' # Required when source == Specific
      pipeline: 91 # Required when source == Specific
      buildVersionToDownload: 'latest' # Required when source == Specific# Options: latest, latestFromBranch, specific
      artifactName: '$(DISTRO_NAME)-drop'
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(System.ArtifactsDirectory)\$(DISTRO_NAME)-drop\*.zip' 
      destinationFolder: '$(INSTALL_DIR)'
      cleanDestinationFolder: true
  - script: |
      rd /s /q %PDB_OUTPUT_DIRECTORY%
      mkdir %PDB_OUTPUT_DIRECTORY%
    displayName: 'clean symbols folder'
  - script: |
      DEL /F /Q %INSTALL_DIR%\share\tinyxml\tinyxml-config.cmake
      DEL /F /Q %INSTALL_DIR%\share\tinyxml\tinyxmlTargets-release.cmake
      DEL /F /Q %INSTALL_DIR%\share\tinyxml\tinyxmlTargets.cmake
      DEL /F /Q %INSTALL_DIR%\include\sdformat-6.2\tinyxml.h
      xcopy /Y /S /I experimental\ros\installed_patch %INSTALL_DIR%
    displayName: 'patch installed directory'
  - script: |
      rd /s /q %INSTALL_DIR%\include\kdl
      rd /s /q %INSTALL_DIR%\share\orocos_kdl
      rd /s /q %INSTALL_DIR%\share\orocos-kdl
      DEL /F /Q %INSTALL_DIR%\lib\orocos-kdl.lib
      DEL /F /Q %INSTALL_DIR%\lib\pkgconfig\orocos-kdl.pc
      DEL /F /Q %INSTALL_DIR%\lib\pkgconfig\orocos_kdl.pc
    condition: and(succeeded(), eq(variables.ROS_VERSION, '2'))
    displayName: 'remove orocos-kdl'
  - script: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      set PATH=%INSTALL_DIR%\Scripts;%INSTALL_DIR%;%INSTALL_DIR%\bin;%PATH%
      mkdir catkin_ws\src
      cd catkin_ws
      vcs import --force src < ..\experimental\ros\dashing\release-dashing-20200722.repos
      call ..\experimental\ros\build_ros2.bat
    condition: and(succeeded(), eq(variables.DISTRO_NAME, 'dashing'))
    displayName: 'build foxy'
  - script: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      set PATH=%INSTALL_DIR%\Scripts;%INSTALL_DIR%;%INSTALL_DIR%\bin;%PATH%
      mkdir catkin_ws\src
      cd catkin_ws
      vcs import --force src < ..\experimental\ros\eloquent\release-eloquent-20200124-1.repos
      call ..\experimental\ros\build_ros2.bat
    condition: and(succeeded(), eq(variables.DISTRO_NAME, 'eloquent'))
    displayName: 'build foxy'
  - script: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      set PATH=%INSTALL_DIR%\Scripts;%INSTALL_DIR%;%INSTALL_DIR%\bin;%PATH%
      mkdir catkin_ws\src
      cd catkin_ws
      vcs import --force src < ..\experimental\ros\gazebo.rosinstall
      vcs import --force src < ..\experimental\ros\foxy\release-foxy-20200807.repos
      vcs import --force src < ..\experimental\ros\foxy\foxy_override.repos
      vcs import --force src < ..\experimental\ros\foxy\foxy_navigation2.repos
      vcs import --force src < ..\experimental\ros\foxy\foxy_moveit2.repos
      xcopy /Y /S /I ..\experimental\ros\src_patch src
      call ..\experimental\ros\build_ros2.bat
    condition: and(succeeded(), eq(variables.DISTRO_NAME, 'foxy'))
    displayName: 'build foxy'
  - script: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      set PATH=%INSTALL_DIR%\Scripts;%INSTALL_DIR%;%INSTALL_DIR%\bin;%PATH%
      mkdir catkin_ws\src
      cd catkin_ws
      vcs import --force src < ..\experimental\ros\gazebo.rosinstall
      vcs import --force src < ..\experimental\ros\noetic\noetic.rosinstall
      vcs import --force src < ..\experimental\ros\noetic\noetic_override.rosinstall
      xcopy /Y /S /I ..\experimental\ros\src_patch src
      call ..\experimental\ros\build_ros1.bat
    condition: and(succeeded(), eq(variables.DISTRO_NAME, 'noetic'))
    displayName: 'build noetic'
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: .\catkin_ws\log
      artifactName: '$(DISTRO_NAME)-log'
    condition: always()
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(PDB_OUTPUT_DIRECTORY)'
      includeRootFolder: false
      archiveType: 'zip' # Options: zip, 7z, tar, wim
      tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: '$(Build.ArtifactStagingDirectory)/symbol.zip'
      replaceExistingArchive: true
    condition: always()
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(INSTALL_DIR)'
      includeRootFolder: false
      archiveType: 'zip' # Options: zip, 7z, tar, wim
      tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: '$(Build.ArtifactStagingDirectory)/drop.zip'
      replaceExistingArchive: true
    condition: always()
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/drop.zip'
      artifactName: '$(DISTRO_NAME)-drop'
    condition: always()
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/symbol.zip'
      artifactName: '$(DISTRO_NAME)-symbol'
    condition: always()
