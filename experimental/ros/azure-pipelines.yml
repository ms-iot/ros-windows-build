trigger: none
pr: none

jobs:
- job: Build
  pool: 'Edge-Robotics-VS2019'
  #  vmImage: 'windows-2019'
  timeoutInMinutes: 360
  workspace:
    clean: all
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'specific' # Options: current, specific
      project: 'ros-win' # Required when source == Specific
      pipeline: 91 # Required when source == Specific
      buildVersionToDownload: 'latest' # Required when source == Specific# Options: latest, latestFromBranch, specific
      artifactName: 'foxy-drop'
  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(System.ArtifactsDirectory)\foxy-drop\*.zip' 
      destinationFolder: 'c:\opt\ros\foxy\x64'
      cleanDestinationFolder: true
  - script: |
      call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
      DEL /F /Q C:\opt\ros\foxy\x64\share\tinyxml\tinyxml-config.cmake
      DEL /F /Q C:\opt\ros\foxy\x64\share\tinyxml\tinyxmlTargets-release.cmake
      DEL /F /Q C:\opt\ros\foxy\x64\share\tinyxml\tinyxmlTargets.cmake
      copy /Y experimental\ros\assimpTargets-release.cmake C:\opt\ros\foxy\x64\share\assimp\assimpTargets-release.cmake
      copy /Y experimental\ros\orocos_kdl-config.cmake C:\opt\ros\foxy\x64\share\orocos_kdl\orocos_kdl-config.cmake
      copy /Y experimental\ros\python38._pth c:\opt\ros\foxy\x64\python38._pth
      copy /Y experimental\ros\extra.pth c:\opt\ros\foxy\x64\Lib\site-packages
      ::rd /s /q c:\opt\ros\foxy\x64\include\kdl
      ::rd /s /q c:\opt\ros\foxy\x64\share\orocos_kdl
      ::rd /s /q c:\opt\ros\foxy\x64\share\orocos-kdl
      ::DEL /F /Q c:\opt\ros\foxy\x64\lib\orocos-kdl.lib
      ::DEL /F /Q c:\opt\ros\foxy\x64\lib\pkgconfig\orocos-kdl.pc
      ::DEL /F /Q c:\opt\ros\foxy\x64\lib\pkgconfig\orocos_kdl.pc
      copy /Y experimental\ros\pkg-config.exe c:\opt\ros\foxy\x64\bin
      copy /Y experimental\ros\glib-2.0.dll c:\opt\ros\foxy\x64\bin
      set PATH=c:\opt\ros\foxy\x64\Scripts;c:\opt\ros\foxy\x64;c:\opt\ros\foxy\x64\bin;%PATH%
      mkdir catkin_ws\src
      cd catkin_ws
      python -m pip install rospkg
      vcs import --force src < ..\experimental\ros\gazebo.rosinstall
      ::vcs import src < ..\experimental\ros\ros2.repos
      vcs import --force src < ..\experimental\ros\noetic.rosinstall
      vcs import --force src < ..\experimental\ros\noetic_override.rosinstall

      :: copy /Y ..\experimental\ros\package.xml src\gazebo\gazebo10
      ::colcon build  --continue-on-error --merge-install --install-base C:\opt\ros\foxy\x64 --cmake-args -DCURL_NO_CURL_CMAKE=ON -DBUILD_TESTING:BOOL=False -DCMAKE_PROGRAM_PATH=c:\opt\ros\foxy\x64\tools\protobuf;c:\opt\ros\foxy\x64\tools\qt5\bin
      mkdir build_gz
      pushd builg_gz
      cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=C:\opt\ros\foxy\x64 -DCMAKE_INSTALL_PREFIX=C:\opt\ros\foxy\x64 -DCURL_NO_CURL_CMAKE=ON -DBUILD_TESTING:BOOL=False -DCMAKE_PROGRAM_PATH=c:\opt\ros\foxy\x64\tools\protobuf;c:\opt\ros\foxy\x64\tools\qt5\bin ..\src\gazebo\gazebo10
      cmake --build . --config Release --target install
      pop
      python src\catkin\bin\catkin_make_isolated --only-pkg-with-deps desktop_full --ignore-pkg stage stage_ros image_view --use-ninja --install-space "c:\opt\ros\foxy\x64" --install -DCURL_NO_CURL_CMAKE=ON -DCATKIN_SKIP_TESTING=ON -DCMAKE_PROGRAM_PATH=c:\opt\ros\foxy\x64\tools\protobuf;c:\opt\ros\foxy\x64\tools\qt5\bin
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: .\catkin_ws\log
      artifactName: log
    condition: always()
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'C:\opt\ros\foxy\x64'
      includeRootFolder: false
      archiveType: 'zip' # Options: zip, 7z, tar, wim
      tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
      archiveFile: '$(Build.ArtifactStagingDirectory)/drop.zip'
      replaceExistingArchive: true
    condition: always()
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/drop.zip'
      artifactName: drop
    condition: always()
