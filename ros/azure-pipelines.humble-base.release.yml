trigger:
  batch: true
  branches:
    include:
    - master
  paths:
    include:
    - ros/humble/*
    - ros/azure-pipelines.humble-base.release.yml
pr:
  branches:
    include:
    - master
  paths:
    include:
    - ros/humble/*
    - ros/azure-pipelines.humble-base.release.yml

resources:
  pipelines:
  - pipeline: ms-iot.ros-external-vs2022
    source: ms-iot.ros-external-vs2022
    version: '20230301.1'

name: '$(Date:yyMMdd).$(Rev:rrrr)'

variables:
  RELEASE_VERSION: $(Build.BuildNumber)
  ROS_DISTRO: 'humble'
  INSTALL_DIR: 'c:\opt\ros\humble\x64'

stages:
- stage: build
  displayName: 'Build ${{ variables.ROS_DISTRO }}-base'
  jobs:
  - job: Build
    pool: Edge-Robotics-VS2022-ESBuild
    variables:
      PDB_OUTPUT_DIRECTORY: 'd:\symbols'
      ROS_VERSION: '2'
    timeoutInMinutes: 360
    workspace:
      clean: all
    steps:
    - script: 'reg add HKLM\SYSTEM\CurrentControlSet\Control\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1 /f'
      displayName: 'Enable long paths on Windows'
    - download: ms-iot.ros-external-vs2022
      artifact: '${{ variables.ROS_DISTRO }}-external'
    - task: ExtractFiles@1
      inputs:
        archiveFilePatterns: '$(PIPELINE.WORKSPACE)\ms-iot.ros-external-vs2022\$(ROS_DISTRO)-external\external.zip'
        destinationFolder: '$(INSTALL_DIR)'
        cleanDestinationFolder: true
    - script: |
        rd /s /q %PDB_OUTPUT_DIRECTORY% 2>&1
        mkdir %PDB_OUTPUT_DIRECTORY%
      displayName: 'Clean symbols folder'
    - script: |
        call %Build_SourcesDirectory%\ros\humble\patch.bat
    - script: |
        set CMAKE_FIND_USE_INSTALL_PREFIX=TRUE
        set Python3_FIND_REGISTRY=FALSE
        set PYTHONIOENCODING=utf-8
        set PYTHONLEGACYWINDOWSSTDIO=utf-8
        set PYTHON3_EXECUTABLE=%INSTALL_DIR%\python3.exe
        set PYTHON_EXECUTABLE=%Python3_EXECUTABLE%
        set Python3_ROOT_DIR=%INSTALL_DIR%
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        set PATH=%INSTALL_DIR%\Scripts;%INSTALL_DIR%;%INSTALL_DIR%\bin;%PATH%
        where python
        copy %Python3_EXECUTABLE% %INSTALL_DIR%\python3.exe
        dir %INSTALL_DIR%
        set
        mkdir ws\src
        pushd ws
        vcs import --force --shallow --recursive src <  %Build_SourcesDirectory%\ros\humble\humblemin.repos
        vcs import --force --shallow --recursive src <  %Build_SourcesDirectory%\ros\humble\humble_override.repos
        dir src
        xcopy /Y /S /I ..\ros\src_patch src
        call ..\ros\humble\build.bat
        popd
      displayName: 'build humble'
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(PDB_OUTPUT_DIRECTORY)'
        includeRootFolder: false
        archiveType: 'zip' # Options: zip, 7z, tar, wim
        tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
        archiveFile: '$(Build.ArtifactStagingDirectory)/symbols.zip'
        replaceExistingArchive: true
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(INSTALL_DIR)'
        includeRootFolder: false
        archiveType: 'zip' # Options: zip, 7z, tar, wim
        tarCompression: 'gz' # Optional. Options: gz, bz2, xz, none
        archiveFile: '$(Build.ArtifactStagingDirectory)/install.zip'
        replaceExistingArchive: true
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/install.zip'
        artifactName: '$(ROS_DISTRO)-base-install'
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/symbols.zip'
        artifactName: '$(ROS_DISTRO)-base-symbols'
