trigger: none
pr: none

variables:
  GAZEBO_BUILD_WORKING_DIRECTORY: $(Build.SourcesDirectory)\gazebo\gazebo9
  GAZEBO_INSTALL_PREFIX: 'c:\opt\rosdeps\x64'
  GAZEBO_CMAKE_BUILD_TYPE: 'RelWithDebInfo'
  GAZEBO_CMAKE_PDB_OUTPUT_DIRECTORY: '$(Build.ArtifactStagingDirectory)\symbols'

jobs:
- job: Build
  timeoutInMinutes: 240
  pool:
    vmImage: 'windows-2019'
  steps:
  - script: |
      choco sources add -n=roswin -s https://aka.ms/ros/feed --priority 1
      choco upgrade 7zip
      choco upgrade pkg-config boost freeimage protobuf qt5-sdk dlfcn-win32 libcurl ogre zeromq cppzmq tbb qwt
    displayName: Install system dependencies
  - script: |
      git clone https://github.com/ms-iot/ign-cmake -b windows/ign-cmake0
      git clone https://github.com/ignitionrobotics/ign-math -b ign-math4
      git clone https://github.com/ignitionrobotics/ign-msgs -b ign-msgs1
      git clone https://github.com/ignitionrobotics/ign-tools -b ign-tools0
      git clone https://github.com/ignitionrobotics/ign-transport -b ign-transport4
      git clone https://github.com/osrf/sdformat -b sdf6
      git clone https://github.com/ms-iot/gazebo -b windows/gazebo9_9.13.1
    displayName: Get sources
    workingDirectory: $(GAZEBO_BUILD_WORKING_DIRECTORY)
  - script: |
      call "build.bat" ign-cmake
    displayName: ign-cmake
    workingDirectory: $(GAZEBO_BUILD_WORKING_DIRECTORY)
  - script: |
      call "build.bat" ign-math
    displayName: ign-math
    workingDirectory: $(GAZEBO_BUILD_WORKING_DIRECTORY)
  - script: |
      call "build.bat" ign-tools
    displayName: ign-tools
    workingDirectory: $(GAZEBO_BUILD_WORKING_DIRECTORY)
  - script: |
      call "build.bat" ign-msgs
    displayName: ign-msgs
    workingDirectory: $(GAZEBO_BUILD_WORKING_DIRECTORY)
  - script: |
      call "build.bat" ign-transport
    displayName: ign-transport
    workingDirectory: $(GAZEBO_BUILD_WORKING_DIRECTORY)
  - script: |
      call "build.bat" sdformat
    displayName: sdformat
    workingDirectory: $(GAZEBO_BUILD_WORKING_DIRECTORY)
  - script: |
      call "build.bat" gazebo
    displayName: gazebo
    workingDirectory: $(GAZEBO_BUILD_WORKING_DIRECTORY)
  - script: |
      del /f %GAZEBO_INSTALL_PREFIX%\include\sdformat-6.2\tinyxml.h
      powershell.exe -noexit -file "copy_binaries.ps1"
    displayName: Copy binaries
    workingDirectory: $(GAZEBO_BUILD_WORKING_DIRECTORY)
  - script: |
      mkdir %Build_ArtifactStagingDirectory%\output
      mkdir %Build_ArtifactStagingDirectory%\output-pre
      pushd spec
      choco pack --trace --out %Build_ArtifactStagingDirectory%\output gazebo9.nuspec version=9.13.1.1
      choco pack --trace --out %Build_ArtifactStagingDirectory%\output-pre gazebo9.nuspec version=9.13.1.1-pre
    displayName: Packaging
    workingDirectory: $(GAZEBO_BUILD_WORKING_DIRECTORY)
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'opt'
